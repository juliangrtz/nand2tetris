// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);

    Register(in=in, load=load1, out=muxIn1);
    Register(in=in, load=load2, out=muxIn2);
    Register(in=in, load=load3, out=muxIn3);
    Register(in=in, load=load4, out=muxIn4);
    Register(in=in, load=load5, out=muxIn5);
    Register(in=in, load=load6, out=muxIn6);
    Register(in=in, load=load7, out=muxIn7);
    Register(in=in, load=load8, out=muxIn8);

    Mux8Way16(a=muxIn1, b=muxIn2, c=muxIn3, d=muxIn4, e=muxIn5, f=muxIn6, g=muxIn7, h=muxIn8, sel=address, out=out);
}